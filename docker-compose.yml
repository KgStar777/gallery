# version: "3.9"
services:
  frontend:
    build:
      context: ./frontend-14
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://localhost:1337
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "1337:1337"
    environment:
      - NODE_ENV=production
      - DATABASE_CLIENT=sqlite
      - DATABASE_FILENAME=./data/db.sqlite
      # - APP_KEYS=${APP_KEYS}
      # - API_TOKEN_SALT=${API_TOKEN_SALT}
      # - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      # - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./backend:/app
      - /app/node_modules

# version: "3"
# services:
#   postgres:
#     container_name: postgres
#     platform: linux/amd64 #for platform error on Apple M1 chips
#     env_file: .env
#     image: postgres:14.5-alpine
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     volumes:
#       - ./_docker_volumes/postgres:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"

# >>>>>>>>>>>>>>>>>>>>>>>>>
# version: '3.9'

# services:
#   frontend:
#     build: 
#       context: ./frontend-14
#       dockerfile: Dockerfile.prod
#     ports:
#       - "3000:3000"
#     environment:
#       - NODE_ENV=production
#       - BACKEND_URL=http://localhost:1337
#       # - NEXT_PUBLIC_STRAPI_API_URL=http://localhost:1337
#     depends_on:
#       - backend

#   backend:
#     build: 
#       context: ./backend
#       dockerfile: Dockerfile.prod
#     ports:
#       - "1337:1337"
#     environment:
#       - NODE_ENV=production
#       - DATABASE_CLIENT=sqlite
#       - DATABASE_FILENAME=.tmp/data.db
#     volumes:
#       # - ./backend/.tmp:/app/.tmp
#       - ./backend/.tmp:/app/.tmp


# version: '3.8'

# services:
#   frontend:
#     build: ./frontend-14
#     ports:
#       - "3000:3000"
#     env_file:
#     - ./frontend-14/.env
#     # environment:
#     #   - NEXT_PUBLIC_STRAPI_API_URL=http://backend:1337
#     depends_on:
#       - backend

#   backend:
#     build: ./backend
#     ports:
#       - "1337:1337"
#     env_file:
#       - ./backend/.env
#     # environment:
#     #   - DATABASE_CLIENT=sqlite
#     #   - DATABASE_FILENAME=.tmp/data.db
#     volumes:
#       - ./backend/.tmp:/app/.tmp

# -------------
# version: "3.9"
# services:
#   frontend:
#     build:
#       context: ./frontend
#     ports:
#       - "3000:3000"
#     volumes: 
#       - ./frontend:/app
#       - /app/node_modules
#     depends_on:
#       - backend

#   backend:
#     build:
#       context: ./backend
#     ports:
#       - "1337:1337"
#     volumes: 
#       - ./backend:/app
#       - /app/node_modules

# ====================



    # environment:
    #   DATABASE_CLIENT: sqlite
    #   DATABASE_FILENAME: ./data/db.sqlite
    #   APP_KEYS: 

    

  # postgres:
  #   container_name: postgres
  #   platform: linux/amd64 #for platform error on Apple M1 chips
  #   env_file: .env
  #   image: postgres:14.5-alpine
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   volumes:
  #     - ./_docker_volumes/postgres:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"


# version: "3"
# services:
#   strapi:
#     container_name: strapi
#     build:
#       dockerfile: Dockerfile
#     restart: unless-stopped
#     env_file: .env
#     environment:
#       DATABASE_CLIENT: postgres
#       DATABASE_HOST: postgres
#       DATABASE_NAME: ${POSTGRES_DB}
#       DATABASE_USERNAME: ${POSTGRES_USER}
#       DATABASE_PORT: 5432
#       JWT_SECRET: ${JWT_SECRET}
#       ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
#       DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
#       NODE_ENV: development
#     volumes:
#       - ./_docker_volumes/public/uploads:/opt/app/public/uploads
#       - ./config:/opt/app/config
#       - ./src:/opt/app/src
#       - ./package.json:/opt/package.json
#       - ./yarn.lock:/opt/yarn.lock
#     ports:
#       - "1337:1337"
  #   depends_on:
  #     - postgres

  # postgres:
  #   container_name: postgres
  #   platform: linux/amd64 #for platform error on Apple M1 chips
  #   env_file: .env
  #   image: postgres:14.5-alpine
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #   volumes:
  #     - ./_docker_volumes/postgres:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"